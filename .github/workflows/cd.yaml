# Workflow which release all artifacts when a new tag is added
# Based on https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
name: CD

on:
  # pull_request:
  #   branches:
  #     - develop
  #   paths-ignore:
  #     - 'assets/**'
  push:
    branches:
      - developww
    #   - master
    # paths-ignore:
    #   - 'assets/**'
    

jobs:
  deliver:
    strategy:
      matrix:
        include:
        - name: api
          context: .
          file: docker/Dockerfile.node
          args: |
            NODE_APP=@event-boss/api
            APP_DIR=apps/api
          images: |
            ghcr.io/ilijaNL/eventboss-api
        - name: graphql
          context: ./graphql-engine 
          images: |
            ghcr.io/ilijaNL/eventboss-graphql-engine
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images:  ${{ matrix.images }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          build-args: ${{ matrix.args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline