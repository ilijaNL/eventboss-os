version: '3.8'
services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - '5432:5432'
    volumes: # used for initial setup
      - './db/dumps/:/docker-entrypoint-initdb.d/'
    restart: on-failure
    networks:
      - event-boss
  graphql-engine:
    build: ./graphql-engine
    volumes: # used for initial setup
      - './graphql-engine/metadata/:/hasura-metadata/'
      - './graphql-engine/migrations/:/hasura-migrations/'
    ports:
      - '8082:8080'
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - event-boss
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgres@postgres:5432/app
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/app
      HASURA_GRAPHQL_ADMIN_SECRET: admin12345
      HASURA_GRAPHQL_ENABLE_TELEMETRY: 'false'
      ## "$['graphql-api']"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"c9c4ad92-dc28-4928-99f8-689c391bd288","claims_namespace_path":"$$.graphql-api","allowed_skew": 30}'
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false' # set to "false" to disable console
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log
networks:
  event-boss:
    driver: bridge
